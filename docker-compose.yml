services:
  # The MQTT Broker for receiving IoT data
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: mosquitto
    ports:
      - "1883:1883" # Standard MQTT port
    volumes:
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/log:/mosquitto/log
    restart: unless-stopped

  # The InfluxDB time-series database
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086" # InfluxDB web UI and API port
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=obsidian-01
      - DOCKER_INFLUXDB_INIT_BUCKET=microgrid_data
      - DOCKER_INFLUXDB_INIT_RETENTION=0
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
    restart: unless-stopped

  # The Telegraf agent for data collection
  telegraf:
    image: telegraf:1.29
    container_name: telegraf
    ports:
      - "8080:8080"
    environment:
      - INFLUXDB_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
      - mosquitto
    restart: unless-stopped

  # The Grafana server for data visualization
  grafana:
    image: grafana/grafana:10.1.5
    container_name: grafana
    ports:
      - "3000:3000" # Grafana web UI port
    volumes:
      - ./grafana/data:/var/lib/grafana
    depends_on:
      - influxdb
    restart: unless-stopped